{"version":3,"sources":["assets/images/github.svg","assets/images/pow.svg","components/Game/Game.tsx","components/Header/Header.tsx","utils.ts","components/Footer/Footer.tsx","pages/Home/Home.tsx","index.tsx"],"names":["module","exports","GAME_STATE","Header","className","href","src","GithubLogo","alt","getRandomWord","numberOfWords","words","length","randomIndex","parseInt","Math","random","toFixed","disallowdKeys","ignoredKeys","Game","inputRef","React","createRef","w1Ref","w2Ref","useState","START","gameState","setGameState","typingEnabled","setTypingEnabled","inputText","setInputText","setWords","score","setScore","startTime","setStartTime","endTime","setEndTime","startGame","current","focus","IN_GAME","Date","now","restartGame","resetInput","value","ref","type","onKeyPress","e","preventDefault","which","includes","val","key","startsWith","newWord","setTimeout","updateCurrentWord","classList","add","remove","GAME_OVER","PowIcon","onClick","substr","getContainer","Footer","title","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b3fff83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.1f33e75d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pow.169efc69.svg\";","import React, { KeyboardEvent } from \"react\";\n\nimport { getRandomWord } from \"../../utils\";\n\nimport PowIcon from \"../../assets/images/pow.svg\";\n\nimport \"./Game.scss\";\n\nenum GAME_STATE {\n  START,\n  IN_GAME,\n  GAME_OVER,\n}\n\nconst disallowdKeys: Array<number> = [8];\nconst ignoredKeys: Array<number> = [16];\n\nconst Game = () => {\n  const inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  const w1Ref: React.RefObject<HTMLDivElement> = React.createRef();\n  const w2Ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n  const [gameState, setGameState] = React.useState(GAME_STATE.START);\n  const [typingEnabled, setTypingEnabled] = React.useState(false);\n  const [inputText, setInputText] = React.useState(\"\");\n  const [words, setWords] = React.useState([getRandomWord(), getRandomWord()]);\n  const [score, setScore] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(-1);\n  const [endTime, setEndTime] = React.useState(-1);\n\n  const startGame = (): void => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setTypingEnabled(true);\n    setGameState(GAME_STATE.IN_GAME);\n    setStartTime(Date.now());\n  };\n\n  const restartGame = (): void => {\n    setGameState(GAME_STATE.START);\n    setTypingEnabled(false);\n    setInputText(\"\");\n    setWords([getRandomWord(), getRandomWord()]);\n    setScore(0);\n    setStartTime(-1);\n    setEndTime(-1);\n  };\n\n  const resetInput = (): void => {\n    setInputText(\"\");\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n\n  const showErrorText = (): void => {\n    if (w1Ref.current) {\n      w1Ref.current.classList.add(\"error-text\");\n      setTimeout(() => {\n        w1Ref.current?.classList.remove(\"error-text\");\n      }, 300);\n    }\n  };\n\n  const updateCurrentWord = (val: string): void => {\n    if (val.length === words[0].length) {\n      // the word is successfully typed\n      const newWord = getRandomWord();\n      setTimeout(() => {\n        setWords([words[1], newWord]);\n        resetInput();\n        setScore(score + 1);\n      }, 0);\n    }\n  };\n\n  const handleInputChange = (e: KeyboardEvent<HTMLInputElement>): void => {\n    e.preventDefault();\n\n    if (typingEnabled) {\n      const which = e.which;\n\n      if (!disallowdKeys.includes(which) && !ignoredKeys.includes(which)) {\n        const val = e.key;\n\n        if (words[0].startsWith(inputText + val)) {\n          setInputText(inputText + val);\n          updateCurrentWord(inputText + val);\n        } else {\n          // error case\n          setTypingEnabled(false);\n          resetInput();\n          // set the end time before doing anything else\n          setEndTime(Date.now());\n          // show the error text for 300 milliseconds and then change the game state to GAME_OVER\n          showErrorText();\n          setTimeout(() => setGameState(GAME_STATE.GAME_OVER), 300);\n        }\n      }\n    }\n  };\n\n  const getContainer = (gameState: any): JSX.Element => {\n    switch (gameState) {\n      case GAME_STATE.START: {\n        return (\n          <div className=\"f-jcc fw game-start-container\">\n            <img className=\"pow-icon\" src={PowIcon} alt=\"Pow Icon\" />\n            <div className=\"instructions\">\n              Try to type all the words accurately as they come randomly on the\n              screen.<div>Mistype and you are out.</div>\n            </div>\n            <div className=\"start-button\" onClick={startGame}>\n              START\n            </div>\n          </div>\n        );\n      }\n      case GAME_STATE.IN_GAME: {\n        return (\n          <div className=\"game-main-container\">\n            <div ref={w1Ref} className=\"w-1\">\n              {inputText.length > 0 ? (\n                <>\n                  <span>{inputText}</span>\n                  {words[0].substr(inputText.length)}\n                </>\n              ) : (\n                <>\n                  <span></span>\n                  {words[0]}\n                </>\n              )}\n            </div>\n            <div ref={w2Ref} className=\"w-2\">\n              {words[1]}\n            </div>\n          </div>\n        );\n      }\n      case GAME_STATE.GAME_OVER: {\n        return (\n          <div className=\"f-jcc fw game-over-container\">\n            <h3>GAME OVER</h3>\n            <p>\n              Your Score: <b>{score}</b>\n            </p>\n            <p>\n              Words per minute:{\" \"}\n              <b>{score / ((endTime - startTime) / 1000 / 60)}</b>\n            </p>\n            <div className=\"restart-button\" onClick={restartGame}>\n              RESTART\n            </div>\n          </div>\n        );\n      }\n      default:\n        return (\n          <div className=\"app-unexpected-error\">\n            Something went terribly wrong. Try refreshing the page. If that\n            doesn't work, please raise an issue with the steps to reproduce in\n            the project{\" \"}\n            <a href=\"https://github.com/itsSayantan/wordpow\">Github Page</a>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"f-jcc g-wrapper\">\n      <input ref={inputRef} type=\"text\" onKeyPress={handleInputChange} />\n      {getContainer(gameState)}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport GithubLogo from \"../../assets/images/github.svg\";\n\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header f-jcsb\">\n      <div className=\"brand animated-text\">WORDPOW</div>\n      <div className=\"links f-jcc\">\n        <a href=\"https://github.com/itsSayantan/wordpow\">\n          <img src={GithubLogo} alt=\"Github Link\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import words from \"./words.json\";\n\nconst getRandomWord = (): string => {\n  const numberOfWords = words.length;\n  const randomIndex: number = parseInt(\n    (Math.random() * (numberOfWords - 1)).toFixed(0)\n  );\n\n  return words[randomIndex];\n};\n\nexport { getRandomWord };\n","import React from \"react\";\n\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"f-jcsb footer-wrapper\">\n      <div className=\"version\">v1.0.0</div>\n      <div className=\"credits\">\n        Icons made by{\" \"}\n        <a\n          href=\"https://www.flaticon.com/authors/pixel-perfect\"\n          title=\"Pixel perfect\"\n        >\n          Pixel perfect\n        </a>{\" \"}\n        and{\" \"}\n        <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\n          Freepik\n        </a>{\" \"}\n        from{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          www.flaticon.com\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Header from \"../../components/Header/Header\";\nimport Game from \"../../components/Game/Game\";\nimport Footer from \"../../components/Footer/Footer\";\n\nimport \"./Home.scss\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-wrapper\">\n      <Header />\n      <Game />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Home from \"./pages/Home/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}