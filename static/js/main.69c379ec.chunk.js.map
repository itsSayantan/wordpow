{"version":3,"sources":["assets/images/github.svg","assets/images/pow.svg","components/Game/Game.tsx","components/Header/Header.tsx","utils.ts","components/Footer/Footer.tsx","pages/Home/Home.tsx","index.tsx"],"names":["module","exports","GAME_STATE","Header","className","target","rel","href","src","GithubLogo","alt","getRandomWord","numberOfWords","words","length","randomIndex","parseInt","Math","random","toFixed","calculateWPM","score","time","startTime","endTime","num","arr","toString","split","integerPart","decimalPart","filter","a","i","join","Number","roundNumber","disallowdKeys","ignoredKeys","Game","inputRef","React","createRef","w1Ref","w2Ref","useState","START","gameState","setGameState","typingEnabled","setTypingEnabled","inputText","setInputText","setWords","setScore","setTime","setStartTime","setEndTime","startGame","IN_GAME","Date","now","restartGame","pauseGame","useCallback","GAME_OVER","PAUSED","resumeGame","resetInput","current","value","useEffect","inp","addEventListener","removeEventListener","focus","blur","ref","type","onKeyPress","e","preventDefault","which","includes","val","key","startsWith","newWord","updateCurrentWord","classList","add","setTimeout","remove","PowIcon","onClick","substr","getContainer","Footer","title","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69c379ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.1f33e75d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pow.169efc69.svg\";","import React, { KeyboardEvent } from \"react\";\n\nimport { getRandomWord, calculateWPM } from \"../../utils\";\n\nimport PowIcon from \"../../assets/images/pow.svg\";\n\nimport \"./Game.scss\";\n\nenum GAME_STATE {\n  START,\n  IN_GAME,\n  PAUSED,\n  GAME_OVER,\n}\n\nconst disallowdKeys: Array<number> = [8];\nconst ignoredKeys: Array<number> = [16];\n\nconst Game = () => {\n  const inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  const w1Ref: React.RefObject<HTMLDivElement> = React.createRef();\n  const w2Ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n  const [gameState, setGameState] = React.useState(GAME_STATE.START);\n  const [typingEnabled, setTypingEnabled] = React.useState(false);\n  const [inputText, setInputText] = React.useState(\"\");\n  const [words, setWords] = React.useState([getRandomWord(), getRandomWord()]);\n  const [score, setScore] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(-1);\n  const [endTime, setEndTime] = React.useState(-1);\n\n  const startGame = (): void => {\n    setTypingEnabled(true);\n    setGameState(GAME_STATE.IN_GAME);\n    setStartTime(Date.now());\n  };\n\n  const restartGame = (): void => {\n    setGameState(GAME_STATE.START);\n    setTypingEnabled(false);\n    setInputText(\"\");\n    setWords([getRandomWord(), getRandomWord()]);\n    setScore(0);\n    setTime(0);\n    setStartTime(-1);\n    setEndTime(-1);\n  };\n\n  const pauseGame = React.useCallback((): void => {\n    if (gameState === GAME_STATE.GAME_OVER) {\n      return;\n    }\n    setGameState(GAME_STATE.PAUSED);\n    setTime(time + (Date.now() - startTime));\n    setStartTime(-1);\n    setTypingEnabled(false);\n  }, [time, gameState, startTime]);\n\n  const resumeGame = (): void => {\n    setGameState(GAME_STATE.IN_GAME);\n    setStartTime(Date.now());\n    setTypingEnabled(true);\n  };\n\n  const resetInput = (): void => {\n    setInputText(\"\");\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n\n  const showErrorText = (): void => {\n    if (w1Ref.current) {\n      w1Ref.current.classList.add(\"error-text\");\n      setTimeout(() => {\n        w1Ref.current?.classList.remove(\"error-text\");\n      }, 700);\n    }\n  };\n\n  const updateCurrentWord = (val: string): void => {\n    if (val.length === words[0].length) {\n      // the word is successfully typed\n      const newWord = getRandomWord();\n      setWords([words[1], newWord]);\n      resetInput();\n      setScore(score + 1);\n    }\n  };\n\n  const handleInputChange = (e: KeyboardEvent<HTMLInputElement>): void => {\n    e.preventDefault();\n\n    if (typingEnabled) {\n      const which = e.which;\n\n      if (!disallowdKeys.includes(which) && !ignoredKeys.includes(which)) {\n        const val = e.key;\n\n        if (words[0].startsWith(inputText + val)) {\n          setInputText(inputText + val);\n          updateCurrentWord(inputText + val);\n        } else {\n          // error case\n          resetInput();\n          // set the end time before doing anything else\n          setEndTime(Date.now());\n          // show the error text for 700 milliseconds and then change the game state to GAME_OVER\n          showErrorText();\n          setTimeout(() => {\n            setGameState(GAME_STATE.GAME_OVER);\n            setTypingEnabled(false);\n          }, 700);\n        }\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    const inp = inputRef.current;\n    if (inp) {\n      inp.addEventListener(\"blur\", pauseGame);\n    }\n    return () => {\n      inp?.removeEventListener(\"blur\", pauseGame);\n    };\n  }, [inputRef, pauseGame]);\n\n  React.useEffect(() => {\n    if (typingEnabled) {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n    }\n  }, [typingEnabled, inputRef]);\n\n  const getContainer = (gameState: any): JSX.Element => {\n    switch (gameState) {\n      case GAME_STATE.START: {\n        return (\n          <div className=\"f-jcc fw game-start-container\">\n            <img className=\"pow-icon\" src={PowIcon} alt=\"Pow Icon\" />\n            <div className=\"instructions\">\n              Try to type all the words accurately as they come randomly on the\n              screen.<div>Mistype and you are out.</div>\n            </div>\n            <div className=\"start-button\" onClick={startGame}>\n              START\n            </div>\n          </div>\n        );\n      }\n      case GAME_STATE.IN_GAME: {\n        return (\n          <div className=\"game-main-container\">\n            <div ref={w1Ref} className=\"w-1\">\n              {inputText.length > 0 ? (\n                <>\n                  <span>{inputText}</span>\n                  {words[0].substr(inputText.length)}\n                </>\n              ) : (\n                <>\n                  <span></span>\n                  {words[0]}\n                </>\n              )}\n            </div>\n            <div ref={w2Ref} className=\"w-2\">\n              {words[1]}\n            </div>\n          </div>\n        );\n      }\n      case GAME_STATE.PAUSED: {\n        return (\n          <div className=\"f-jcc fw game-paused-container\">\n            <h3>PAUSED</h3>\n            <p>Don't worry. Your progress is not lost.</p>\n            <div className=\"resume-button\" onClick={resumeGame}>\n              RESUME\n            </div>\n          </div>\n        );\n      }\n      case GAME_STATE.GAME_OVER: {\n        return (\n          <div className=\"f-jcc fw game-over-container\">\n            <h3>GAME OVER</h3>\n            <p>\n              Your Score: <b>{score}</b>\n            </p>\n            <p>\n              Words per minute:{\" \"}\n              <b>{calculateWPM(score, time, startTime, endTime)}</b>\n            </p>\n            <div className=\"restart-button\" onClick={restartGame}>\n              RESTART\n            </div>\n          </div>\n        );\n      }\n      default:\n        return (\n          <div className=\"app-unexpected-error\">\n            Something went terribly wrong. Try refreshing the page. If that\n            doesn't work, please raise an issue with the steps to reproduce in\n            the project{\" \"}\n            <a href=\"https://github.com/itsSayantan/wordpow\">Github Page</a>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"f-jcc g-wrapper\">\n      <input ref={inputRef} type=\"text\" onKeyPress={handleInputChange} />\n      {getContainer(gameState)}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport GithubLogo from \"../../assets/images/github.svg\";\n\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header f-jcsb\">\n      <div className=\"brand animated-text\">WORDPOW</div>\n      <div className=\"links f-jcc\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/itsSayantan/wordpow\"\n        >\n          <img src={GithubLogo} alt=\"Github Link\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import words from \"./words.json\";\n\nconst getRandomWord = (): string => {\n  const numberOfWords = words.length;\n  const randomIndex: number = parseInt(\n    (Math.random() * (numberOfWords - 1)).toFixed(0)\n  );\n\n  return words[randomIndex];\n};\n\nconst roundNumber = (num: number): number => {\n  if (num % 10 === 0) {\n    return num;\n  } else {\n    const arr = num.toString().split(\".\");\n    const integerPart = arr[0];\n    const decimalPart = arr[1]\n      .split(\"\")\n      .filter((a: string, i: number) => i < 3)\n      .join(\"\");\n    return Number(integerPart + \".\" + decimalPart);\n  }\n};\n\nconst calculateWPM = (\n  score: number,\n  time: number,\n  startTime: number,\n  endTime: number\n): number => {\n  const wpm = score / ((time + (endTime - startTime)) / 1000 / 60);\n  return roundNumber(wpm);\n};\n\nexport { getRandomWord, calculateWPM };\n","import React from \"react\";\n\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"f-jcsb footer-wrapper\">\n      <div className=\"version\">v1.0.1</div>\n      <div className=\"credits\">\n        Icons made by{\" \"}\n        <a\n          href=\"https://www.flaticon.com/authors/pixel-perfect\"\n          title=\"Pixel perfect\"\n        >\n          Pixel perfect\n        </a>{\" \"}\n        and{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.flaticon.com/authors/freepik\"\n          title=\"Freepik\"\n        >\n          Freepik\n        </a>{\" \"}\n        from{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.flaticon.com/\"\n          title=\"Flaticon\"\n        >\n          www.flaticon.com\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Header from \"../../components/Header/Header\";\nimport Game from \"../../components/Game/Game\";\nimport Footer from \"../../components/Footer/Footer\";\n\nimport \"./Home.scss\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-wrapper\">\n      <Header />\n      <Game />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Home from \"./pages/Home/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}